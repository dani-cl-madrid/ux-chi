---
title: Dropdown
---
p.-text
  | Use the function <code>chi.dropdown(elem)</code> to instantiate a new dropdown component in the DOM
  | element passed as a parameter. You must use the trigger element as the parameter.

.example.-mb3
  .-p3
    .m-dropdown
      button.a-btn.m-dropdown__trigger Dropdown, click me
      .m-dropdown__menu
        a.m-dropdown__menu-item(href='#') Element 1
        a.m-dropdown__menu-item(href='#') Element 2
        a.m-dropdown__menu-item(href='#') Element 3
        a.m-dropdown__menu-item(href='#') Element 4
  :code(lang="html")
    <div class="m-dropdown">
      <button id="dropdown-1" class="a-btn m-dropdown__trigger">Dropdown, click me</button>
      <div class="m-dropdown__menu">
        <a class="m-dropdown__menu-item" href="#">Element 1</a>
        <a class="m-dropdown__menu-item" href="#">Element 2</a>
        <a class="m-dropdown__menu-item" href="#">Element 3</a>
        <a class="m-dropdown__menu-item" href="#">Element 4</a>
      </div>
    </div>
    <script>chi.dropdown(document.getElementById('dropdown-1'));</script>

- var i = 0;
-
  var flags = [
    {icon: 'icon-atom', title: 'Argentina'},
    {icon: 'icon-atom', title: 'Australia'},
    {icon: 'icon-atom', title: 'Brazil'},
    {icon: 'icon-atom', title: 'Canada - English'},
    {icon: 'icon-atom', title: 'Canada - French'},
    {icon: 'icon-atom', title: 'Chile'},
    {icon: 'icon-atom', title: 'Columbia'},
    {icon: 'icon-atom', title: 'Costa Rica'},
    {icon: 'icon-atom', title: 'Ecuador'},
    {icon: 'icon-atom', title: 'Germany'},
    {icon: 'icon-atom', title: 'Hong Kong - Chinese'},
    {icon: 'icon-atom', title: 'Hong Kong - English'},
    {icon: 'icon-atom', title: 'Japan'},
    {icon: 'icon-atom', title: 'Mexico'},
    {icon: 'icon-atom', title: 'Panama'},
    {icon: 'icon-atom', title: 'Peru'},
    {icon: 'icon-atom', title: 'Singapore'},
    {icon: 'icon-atom', title: 'United Kingdom'},
    {icon: 'icon-atom', title: 'United States'},
    {icon: 'icon-atom', title: 'Venezuela'}
  ];

h4 International/language flags example
.example.-mb3
  .-p3
    .m-dropdown
      button.a-btn.-icon.-flat.m-dropdown__trigger(data-target="#flags", data-position='bottom')
        .a-btn__content
          i.a-icon.-sm(class=flags[18].icon)
      .m-dropdown__menu#flags
        .-d--flex
          div
            while i < flags.length/2
              a.m-dropdown__menu-item(href='')
                i.a-icon.-sm(class=flags[i].icon)
                = flags[i].title
              - i++;
          div
            while i < flags.length
              a.m-dropdown__menu-item(href='')
                i.a-icon.-sm(class=flags[i].icon)
                = flags[i].title
              - i++;
  :code(lang="html")
    <div class="m-dropdown">
      <button class="a-btn -icon -flat m-dropdown__trigger -hasActive" data-target="#flags" data-position="bottom">
        <div class="a-btn__content">
          <i class="a-icon -sm icon-atom"></i>
        </div>
      </button>
      <div class="m-dropdown__menu" id="flags" x-placement="bottom" style="position: absolute; will-change: transform; top: 0px; transform: translate3d(28px, 32px, 0px);">
        <div class="-d--flex">
          <div>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Argentina</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Australia</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Brazil</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Canada - English</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Canada - French</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Chile</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Columbia</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Costa Rica</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Ecuador</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Germany</a>
          </div>
          <div>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Hong Kong - Chinese</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Hong Kong - English</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Japan</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Mexico</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Panama</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Peru</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Singapore</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>United Kingdom</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>United States</a>
            <a class="m-dropdown__menu-item" href="#"><i class="a-icon -sm icon-atom"></i>Venezuela</a>
          </div>
        </div>
      </div>
    </div>
    <script>chi.dropdown(document.getElementById('dropdown-1'));</script>

h4 Preventing memory leaks
p.-text
  | Dropdown components have a dispose function to free all resources attached to the element, such as event listeners
  | and object data. You must call this method when you want to remove the component.
:code(lang="javascript")
  var elem = document.getElementById('dropdown-3');
  var dropdown = chi.dropdown(elem);
  // do stuff
  dropdown.dispose();

p.-text
  span.a-badge.-brand.-mr1
    span Tip
  | It is safe to call the <code>dropdown</code> method more than once, as it will return any previously created dropdown component
  | associated to the trigger.
:code(lang="javascript")
  var elem = document.getElementById('dropdown-4');
  var dropdown = chi.dropdown(elem);
  var elem2 = document.getElementById('dropdown-4');
  var dropdown2 = chi.dropdown(elem2);
  dropdown === dropdown2; // returns true

  dropdown.dispose(); // Only have to do it once.

script.
  document.addEventListener(
    'DOMContentLoaded',
    function() {
      Array.prototype.forEach.call(
        document.getElementsByClassName("m-dropdown__trigger"),
        function(el){
          chi.dropdown(el);
        }
      );
    },
    false
  );
